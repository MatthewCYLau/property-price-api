version: "3.9"

services:
  #  redis:
  #    image: redis:latest
  #    ports:
  #      - "6379:6379"
  # db:
  #   image: postgres:15
  #   ports:
  #     - "5432:5432"
  #   environment:
  #     - POSTGRES_DB=property_price
  #     - POSTGRES_USER=db_user
  #     - POSTGRES_PASSWORD=password
  # property-price-cosmos-db:
  #   build:
  #     context: .
  #     dockerfile: ./property-price-cosmos-db/Dockerfile
  #   image: property-price-cosmos-db
  #   container_name: property-price-cosmos-db
  #   ports:
  #     - "8080:8080"
  #   env_file:
  #     - property-price-cosmos-db/docker/dev.env
  # property-price-api:
  #   build:
  #     context: ./property-price-api
  #   image: property-price-api
  #   container_name: property-price-api
  #   ports:
  #     - "8080:8080"
  #   env_file:
  #     - property-price-api/docker/dev.env
  property-price-kafka-service:
    build:
      context: .
      dockerfile: ./property-price-kafka-service/Dockerfile
    image: property-price-kafka-service
    container_name: property-price-kafka-service
    ports:
      - "8080:8080"
    env_file:
      - property-price-kafka-service/docker/dev.env
  zookeeper:
    image: confluentinc/cp-zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
  kafka:
    image: confluentinc/cp-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    expose:
      - "29092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: "1"
      KAFKA_MIN_INSYNC_REPLICAS: "1"
  init-kafka:
    image: confluentinc/cp-kafka
    depends_on:
      - kafka
    entrypoint: ["/bin/sh", "-c"]
    command: |
      "
      kafka-topics --bootstrap-server kafka:29092 --list

      echo -e 'Creating kafka topics'
      kafka-topics --bootstrap-server kafka:29092 --create --if-not-exists --topic InventoryUpdates2 --replication-factor 1 --partitions 1

      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server kafka:29092 --list
      "
